# -*- coding: utf-8 -*-
"""Visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dm7kUtngkmSA3kNuTkEOpsHiBBBeBKou
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

class ReviewVisualizer():
    def __init__(self, paths):
        self.dfs = [None]*len(paths)
        for i, path in enumerate(paths):
            self.dfs[i] = pd.read_csv(path, on_bad_lines='skip', usecols=(range(10)), header=None)      #Load df/relevant columns
            self.dfs[i] = self.dfs[i].rename(columns=self.dfs[i].iloc[0]).drop(self.dfs[i].index[0])    #Set first row as header
            self.dfs[i].columns = self.dfs[i].columns.str.lstrip(" ")                                   #Remove whitespaces
            self.dfs[i].drop(self.dfs[i].loc[self.dfs[i].CPU == " ERROR"].index, inplace=True)          #Remove rows with ERROR cells
            self.dfs[i] = self.dfs[i].loc[:, self.dfs[i].columns!="ID"].applymap(lambda x: float(x[1:]))#Clean and floatify cells
        
    def visualize_data(self, dfs, mp_dim, typemask, x, y, titles, xlabels, ylabels, legend_list):
        _, axes = plt.subplots(nrows=mp_dim[0], ncols=mp_dim[1])
        nflag = x is None 
        for df_id in dfs:
            if nflag: x = range(len(self.dfs[df_id].index))
            for i in range(mp_dim[0]):
                for k in range(mp_dim[1]):
                    z = k if mp_dim[0]==1 else i if mp_dim[1]==1 else (i,k)
                    if typemask[k+i*mp_dim[1]] == "line": 
                        axes[z].plot(x, self.dfs[df_id][y[k+i*mp_dim[1]]])
                    elif typemask[k+i*mp_dim[1]] == "scatter":
                        axes[z].scatter(x, self.dfs[df_id][y[k+i*mp_dim[1]]])
                    axes[z].set_xlabel(xlabels[k+i*mp_dim[1]])
                    axes[z].set_ylabel(ylabels[k+i*mp_dim[1]])
                    axes[z].set_title(titles[k+i*mp_dim[1]])
        for df_id in dfs:
            for i in range(mp_dim[0]):
                for k in range(mp_dim[1]):
                    axes[k if mp_dim[0]==1 else i if mp_dim[1]==1 else (i,k)].legend(legend_list)
        plt.show()

"""#Acc influenced by FPS - CONV3D Small

##Calc
"""

rv = ReviewVisualizer([r"/home/max/Dokumente/swp bees 2022/conv3d small/review_finalcnn3d.log"])

"""###Slice 45"""

list_of_accs_45 =  rv.dfs[0][122:143]["cat_accuracy"]
pd.concat([list_of_accs_45,pd.Series([0.35435435175895609],index=[124512512])],ignore_index=True,axis=0)
pd.concat([list_of_accs_45,pd.Series([0.38138139247894287],index=[124512513])],ignore_index=True,axis=0)
pd.concat([list_of_accs_45,pd.Series([0.38738739490509033],index=[124512524])],ignore_index=True,axis=0)

mean_45 = list_of_accs_45.mean()
std_45 = list_of_accs_45.std()

print(mean_45)
print(std_45)

"""### Slice 30"""

list_of_accs_30 =  rv.dfs[0][83:122]["cat_accuracy"]
list_of_accs_30

mean_30 = list_of_accs_30.mean()
std_30 = list_of_accs_30.std()

print(mean_30)
print(std_30)

"""###Slice 15"""

list_of_accs_15 =  rv.dfs[0][60:83]["cat_accuracy"]
list_of_accs_15

mean_15 = list_of_accs_15.mean()
std_15 = list_of_accs_15.std()

print(mean_15)
print(std_15)

"""### Slice 10"""

list_of_accs_10 =  rv.dfs[0][40:60]["cat_accuracy"]
list_of_accs_10

mean_10 = list_of_accs_10.mean()
std_10 = list_of_accs_10.std()

print(mean_10)
print(std_10)

"""### Slice 5"""

list_of_accs_5 =  rv.dfs[0][20:40]["cat_accuracy"]
list_of_accs_5

mean_5 = list_of_accs_5.mean()
std_5 = list_of_accs_5.std()

print(mean_5)
print(std_5)

"""### Slice 3"""

list_of_accs_3 =  rv.dfs[0][:20]["cat_accuracy"]
list_of_accs_3

mean_3 = list_of_accs_3.mean()
std_3 = list_of_accs_3.std()

print(mean_3)
print(std_3)

"""## Vis"""

list_of_acc_per_slice_small_conv = [mean_3,mean_5,mean_10,mean_15,mean_30,mean_45]
list_of_std_per_slice_small_conv = [std_3,std_5,std_10,std_15,std_30,std_45]

"""Average Acc:

    30 Images (Slice 3): 0.4974974989891052

    18 Images (Slice 5): 0.4924924969673157

    9 Images (Slice 10): 0.4754754702250163

    6 Images (Slice 15): 0.4734734694163005

    3 Images (Slice 30): 0.4164164165655772

    1 Images (Slice 45): 0.37437437971433

Slice 3:
    Avg. Accuracy: 0.531531
    Peak Accuracy: 0.663668

    Slice 5:
    Avg. Accuracy: 0.564415
    Peak Accuracy: 0.660662

    Slice 10:
    Avg. Accuracy: 0.495656
    Peak Accuracy: 0.591593

    Slice 15:
    Avg. Accuracy: 0.498648
    Peak Accuracy: 0.558558

    Slice 30:
    Avg. Accuracy: 0.44369
    peak Accuracy: 0.56756

    Slice 45:
    Avg. Accuracy: 0.36681
    peak Accuracy: 0.43843
"""

plt.rcParams['figure.figsize'] = (12,8)

plt.rcParams.update({'font.size': 20})

plt.scatter(range(len(list_of_acc_per_slice_small_conv)),list_of_acc_per_slice_small_conv,marker = 'o',s=320)

plt.errorbar(range(len(list_of_acc_per_slice_small_conv)),list_of_acc_per_slice_small_conv, yerr=list_of_std_per_slice_small_conv, fmt="none")

ticks,labels = plt.xticks()

plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.show()

"""#Acc influenced by FPS - CONV3D Big

##Calc
"""

rv = ReviewVisualizer([r"/home/max/Dokumente/swp bees 2022/conv3d big/reduced slices/review_Cnn3D_big_final_reduced_slices_v1.log",r"/home/max/Dokumente/swp bees 2022/conv3d big/reduced slices/review_Cnn3D_big_final_reduced_slices_v2.log"])

"""###Slice 45"""

list_of_accs_45 =  rv.dfs[1][8:]["cat_accuracy"]
list_of_accs_45

mean_45 = list_of_accs_45.mean()
std_45 = list_of_accs_45.std()

print(mean_45)
print(std_45)

"""### Slice 30"""

list_of_accs_30 =  rv.dfs[1][5:8]["cat_accuracy"]
list_of_accs_30

mean_30 = list_of_accs_30.mean()
std_30 = list_of_accs_30.std()

print(mean_30)
print(std_30)

"""###Slice 15"""

list_of_accs_15 =  rv.dfs[1][2:5]["cat_accuracy"]
list_of_accs_15

mean_15 = list_of_accs_15.mean()
std_15 = list_of_accs_15.std()

print(mean_15)
print(std_15)

"""### Slice 10"""

list_of_accs_10 =  rv.dfs[1][:2]["cat_accuracy"]
list_of_accs_10_v2 = rv.dfs[0][6:]["cat_accuracy"]
list_of_accs_10 = pd.concat([list_of_accs_10,list_of_accs_10_v2])
list_of_accs_10

mean_10 = list_of_accs_10.mean()
std_10 = list_of_accs_10.std()

print(mean_10)
print(std_10)

"""### Slice 5"""

list_of_accs_5 =  rv.dfs[0][3:6]["cat_accuracy"]
list_of_accs_5

mean_5 = list_of_accs_5.mean()
std_5 = list_of_accs_5.std()

print(mean_5)
print(std_5)

"""### Slice 3"""

list_of_accs_3 =  rv.dfs[0][:3]["cat_accuracy"]
list_of_accs_3

mean_3 = list_of_accs_3.mean()
std_3 = list_of_accs_3.std()

print(mean_3)
print(std_3)

"""## Vis"""

list_of_acc_per_slice_big_conv = [mean_3,mean_5,mean_10,mean_15,mean_30,mean_45]
list_of_std_per_slice_big_conv = [std_3,std_5,std_10,std_15,std_30,std_45]

"""Average Acc:

    30 Images (Slice 3): 0.52752752105395

    18 Images (Slice 5): 0.3933933973312378

    9 Images (Slice 10): 0.4099099040031433

    6 Images (Slice 15): 0.38738739490509033

    3 Images (Slice 30): 0.37137136856714886

    1 Images (Slice 45): 0.3813813825448354
"""

list_of_acc_per_slice = [0.52752752105395,0.3933933973312378,0.4099099040031433,0.38738739490509033,0.37137136856714886,0.3813813825448354]

plt.rcParams['figure.figsize'] = (12,8)

plt.rcParams.update({'font.size': 20})

plt.scatter(range(len(list_of_acc_per_slice_big_conv)),list_of_acc_per_slice_small_conv,marker = 'o',s=320)

plt.errorbar(range(len(list_of_acc_per_slice_big_conv)),list_of_acc_per_slice_small_conv, yerr=list_of_std_per_slice_small_conv, fmt="none")

ticks,labels = plt.xticks()

plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.show()

"""#Acc influenced by FPS - CONV3D Big Gated

##Calc
"""

rv = ReviewVisualizer([r"/home/max/Dokumente/swp bees 2022/conv3d gated/review_Conv3D_gated_v1.log",r"/home/max/Dokumente/swp bees 2022/conv3d gated/review_Conv3D_gated_v2.log",r"/home/max/Dokumente/swp bees 2022/conv3d gated/review_Conv3D_gated_v3.log",r"/home/max/Dokumente/swp bees 2022/conv3d gated/review_Conv3D_gated_v4.log"])

"""###Slice 45"""

list_of_accs_45 =  rv.dfs[1][3:]["cat_accuracy"]
list_of_accs_45

mean_45 = list_of_accs_45.mean()
std_45 = list_of_accs_45.std()

print(mean_45)
print(std_45)

"""### Slice 30"""

list_of_accs_30 =  rv.dfs[1][:3]["cat_accuracy"]
list_of_accs_30

mean_30 = list_of_accs_30.mean()
std_30 = list_of_accs_30.std()

print(mean_30)
print(std_30)

"""###Slice 15"""

list_of_accs_15 =  rv.dfs[2][2:]["cat_accuracy"]
list_of_accs_15

mean_15 = list_of_accs_15.mean()
std_15 = list_of_accs_15.std()

print(mean_15)
print(std_15)

"""### Slice 10"""

list_of_accs_10 =  rv.dfs[2][:2]["cat_accuracy"]
list_of_accs_10_v2 = rv.dfs[3][6:]["cat_accuracy"]
list_of_accs_10 = pd.concat([list_of_accs_10,list_of_accs_10_v2])
list_of_accs_10

mean_10 = list_of_accs_10.mean()
std_10 = list_of_accs_10.std()

print(mean_10)
print(std_10)

"""### Slice 5"""

list_of_accs_5 =  rv.dfs[3][3:6]["cat_accuracy"]
list_of_accs_5

mean_5 = list_of_accs_5.mean()
std_5 = list_of_accs_5.std()

print(mean_5)
print(std_5)

"""### Slice 3"""

list_of_accs_3 =  rv.dfs[3][:3]["cat_accuracy"]
list_of_accs_3

mean_3 = list_of_accs_3.mean()
std_3 = list_of_accs_3.std()

print(mean_3)
print(std_3)

"""## Vis"""

list_of_acc_per_slice_big_conv_gated = [mean_3,mean_5,mean_10,mean_15,mean_30,mean_45]
list_of_std_per_slice_big_conv_gated = [std_3,std_5,std_10,std_15,std_30,std_45]

"""Average Acc:

    30 Images (Slice 3): 0.52752752105395

    18 Images (Slice 5): 0.3933933973312378

    9 Images (Slice 10): 0.4099099040031433

    6 Images (Slice 15): 0.38738739490509033

    3 Images (Slice 30): 0.37137136856714886

    1 Images (Slice 45): 0.3813813825448354
"""

list_of_acc_per_slice = [0.52752752105395,0.3933933973312378,0.4099099040031433,0.38738739490509033,0.37137136856714886,0.3813813825448354]

plt.rcParams['figure.figsize'] = (12,8)

plt.rcParams.update({'font.size': 20})

plt.scatter(range(len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated,marker = 'o',s=320)

plt.errorbar(range(len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated, yerr=list_of_std_per_slice_big_conv_gated, fmt="none")

ticks,labels = plt.xticks()

plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.show()

"""#Acc influenced by FPS - LSTM

##Calc

###Slice 45
"""

list_of_accs_45 =  pd.Series([0.4744744598865509,0.522522509098053,0.5435435175895691])
list_of_accs_45

mean_45 = list_of_accs_45.mean()
std_45 = list_of_accs_45.std()

print(mean_45)
print(std_45)

"""### Slice 30"""

list_of_accs_30 =  pd.Series([0.38738739490509033,0.48948949575424194,0.5345345139503479])
list_of_accs_30

mean_30 = list_of_accs_30.mean()
std_30 = list_of_accs_30.std()

print(mean_30)
print(std_30)

"""###Slice 15"""

list_of_accs_15 =  pd.Series([0.5675675868988037,0.5075075030326843,0.5015015006065369])
list_of_accs_15

mean_15 = list_of_accs_15.mean()
std_15 = list_of_accs_15.std()

print(mean_15)
print(std_15)

"""### Slice 10"""

list_of_accs_10 =  pd.Series([0.5705705881118774,0.4954954981803894,0.6126126050949097])
list_of_accs_10

mean_10 = list_of_accs_10.mean()
std_10 = list_of_accs_10.std()

print(mean_10)
print(std_10)

"""### Slice 5"""

list_of_accs_5 =  pd.Series([0.5525525808334351])
list_of_accs_5

mean_5 = list_of_accs_5.mean()
std_5 = list_of_accs_5.std()

print(mean_5)
print(std_5)

"""### Slice 3"""

list_of_accs_3 =  pd.Series([0.6036036014556885])
list_of_accs_3

mean_3 = list_of_accs_3.mean()
std_3 = list_of_accs_3.std()

print(mean_3)
print(std_3)

"""## Vis"""

list_of_acc_per_slice_lstm = [mean_3,mean_5,mean_10,mean_15,mean_30,mean_45]
list_of_std_per_slice_lstm = [std_3,std_5,std_10,std_15,std_30,std_45]

"""Average Acc:

    30 Images (Slice 3): 0.52752752105395

    18 Images (Slice 5): 0.3933933973312378

    9 Images (Slice 10): 0.4099099040031433

    6 Images (Slice 15): 0.38738739490509033

    3 Images (Slice 30): 0.37137136856714886

    1 Images (Slice 45): 0.3813813825448354
"""

list_of_acc_per_slice = [0.52752752105395,0.3933933973312378,0.4099099040031433,0.38738739490509033,0.37137136856714886,0.3813813825448354]

plt.rcParams['figure.figsize'] = (12,8)

plt.rcParams.update({'font.size': 20})

plt.scatter(range(len(list_of_acc_per_slice_lstm)),list_of_acc_per_slice_lstm,marker = 'o',s=320)

plt.errorbar(range(len(list_of_acc_per_slice_lstm)),list_of_acc_per_slice_lstm, yerr=list_of_std_per_slice_lstm, fmt="none")

ticks,labels = plt.xticks()

plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.show()

"""#Acc influenced by FPS - Conv2D Indepedent

##Calc

###Slice 45
"""

list_of_accs_45 =  pd.Series([0.27227723598480225,0.28217822313308716,0.2673267424106598,0.28217822313308716])
list_of_accs_45

mean_45 = list_of_accs_45.mean()
std_45 = list_of_accs_45.std()

print(mean_45)
print(std_45)

"""### Slice 30"""

list_of_accs_30 =  pd.Series([0.29207921028137207,0.29207921028137207,0.29207921028137207,0.32673266530036926])
list_of_accs_30

mean_30 = list_of_accs_30.mean()
std_30 = list_of_accs_30.std()

print(mean_30)
print(std_30)

"""###Slice 15"""

list_of_accs_15 =  pd.Series([0.29207921028137207,0.29207921028137207,0.29207921028137207,0.29207921028137207])
list_of_accs_15

mean_15 = list_of_accs_15.mean()
std_15 = list_of_accs_15.std()

print(mean_15)
print(std_15)

"""### Slice 10"""

list_of_accs_10 =  pd.Series([0.29207921028137207,0.29207921028137207,0.29207921028137207,0.29207921028137207])
list_of_accs_10

mean_10 = list_of_accs_10.mean()
std_10 = list_of_accs_10.std()

print(mean_10)
print(std_10)

"""### Slice 5"""

list_of_accs_5 =  pd.Series([0.29207921028137207,0.29207921028137207,0.29207921028137207,0.29207921028137207])
list_of_accs_5

mean_5 = list_of_accs_5.mean()
std_5 = list_of_accs_5.std()

print(mean_5)
print(std_5)

"""### Slice 3"""

list_of_accs_3 =  pd.Series([0.29207921028137207,0.29207921028137207,0.3217821717262268,0.29207921028137207])
list_of_accs_3

mean_3 = list_of_accs_3.mean()
std_3 = list_of_accs_3.std()

print(mean_3)
print(std_3)

"""## Vis"""

list_of_acc_per_slice_conv2d_indepedent = [mean_3,mean_5,mean_10,mean_15,mean_30,mean_45]
list_of_std_per_slice_conv2d_indepedent = [std_3,std_5,std_10,std_15,std_30,std_45]

"""Average Acc:

    30 Images (Slice 3): 0.52752752105395

    18 Images (Slice 5): 0.3933933973312378

    9 Images (Slice 10): 0.4099099040031433

    6 Images (Slice 15): 0.38738739490509033

    3 Images (Slice 30): 0.37137136856714886

    1 Images (Slice 45): 0.3813813825448354
"""

list_of_acc_per_slice = [0.52752752105395,0.3933933973312378,0.4099099040031433,0.38738739490509033,0.37137136856714886,0.3813813825448354]

plt.rcParams['figure.figsize'] = (12,8)

plt.rcParams.update({'font.size': 20})

plt.scatter(range(len(list_of_acc_per_slice_conv2d_indepedent)),list_of_acc_per_slice_conv2d_indepedent,marker = 'o',s=320)

plt.errorbar(range(len(list_of_acc_per_slice_conv2d_indepedent)),list_of_acc_per_slice_conv2d_indepedent, yerr=list_of_std_per_slice_conv2d_indepedent, fmt="none")

ticks,labels = plt.xticks()

plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.show()

"""# Visualization of Avg. Acc per Frame Count"""

list_of_acc_per_slice_small_conv = [0.4974974989891052,0.4924924969673157,0.4754754702250163,0.4734734694163005,0.4164164165655772,0.37437437971433]

list_of_acc_per_slice_big_conv = [0.52752752105395,0.3933933973312378,0.4099099040031433,0.38738739490509033,0.37137136856714886,0.3813813825448354]

plt.rcParams['figure.figsize'] = (20,13)

plt.rcParams.update({'font.size': 20})

plt.scatter(np.arange(0,len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated,marker = 'o',s=270,label='Big Conv3D Gated')
plt.scatter(np.arange(0.05,len(list_of_acc_per_slice_conv2d_indepedent)+0.05),list_of_acc_per_slice_conv2d_indepedent,marker = 'o',s=270,label='Conv2D')
plt.scatter(np.arange(0.1,len(list_of_acc_per_slice_lstm)+0.1),list_of_acc_per_slice_lstm,marker = 'o',s=270,label='LSTM')
plt.scatter(np.arange(0.15,len(list_of_acc_per_slice_big_conv)+0.15),list_of_acc_per_slice_big_conv,marker = 'o',s=270,label = 'Big Conv3D')
plt.scatter(np.arange(0.2,len(list_of_acc_per_slice_small_conv)+0.2),list_of_acc_per_slice_small_conv,marker = 'o',s=270,label='Small Conv3D')


plt.errorbar(np.arange(0,len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated, yerr=list_of_std_per_slice_big_conv_gated, fmt="none")
plt.errorbar(np.arange(0.05,len(list_of_acc_per_slice_conv2d_indepedent)+0.05),list_of_acc_per_slice_conv2d_indepedent, yerr=list_of_std_per_slice_conv2d_indepedent, fmt="none")
plt.errorbar(np.arange(0.1,len(list_of_acc_per_slice_lstm)+0.1),list_of_acc_per_slice_lstm, yerr=list_of_std_per_slice_lstm, fmt="none")
plt.errorbar(np.arange(0.15,len(list_of_acc_per_slice_big_conv)+0.15),list_of_acc_per_slice_big_conv, yerr=list_of_std_per_slice_big_conv, fmt="none")
plt.errorbar(np.arange(0.2,len(list_of_acc_per_slice_small_conv)+0.2),list_of_acc_per_slice_small_conv, yerr=list_of_std_per_slice_small_conv, fmt="none")

ticks,labels = plt.xticks()

plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.legend()


plt.tight_layout()

plt.show()

plt.rcParams['figure.figsize'] = (23,17)

plt.rcParams.update({'font.size': 20})

list_of_acc_per_slice_big_conv_gated.reverse()
list_of_acc_per_slice_conv2d_indepedent.reverse()
list_of_acc_per_slice_lstm.reverse()
list_of_acc_per_slice_big_conv.reverse()
list_of_acc_per_slice_small_conv.reverse()

list_of_std_per_slice_big_conv_gated.reverse()
list_of_std_per_slice_conv2d_indepedent.reverse()
list_of_std_per_slice_lstm.reverse()
list_of_std_per_slice_big_conv.reverse()
list_of_std_per_slice_small_conv.reverse()

plt.plot(np.arange(0,len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated,marker = 'o',label='Big Conv3D Gated',color='tab:blue',linewidth=5)
plt.plot(np.arange(0.05,len(list_of_acc_per_slice_conv2d_indepedent)+0.05),list_of_acc_per_slice_conv2d_indepedent,marker = 'o',label='Conv2D',color='tab:orange',linewidth=5)
plt.plot(np.arange(0.1,len(list_of_acc_per_slice_lstm)+0.1),list_of_acc_per_slice_lstm,marker = 'o',label='LSTM',color='tab:green',linewidth=5)
plt.plot(np.arange(0.15,len(list_of_acc_per_slice_big_conv)+0.15),list_of_acc_per_slice_big_conv,marker = 'o',label = 'Big Conv3D',color='tab:red',linewidth=5)
plt.plot(np.arange(0.2,len(list_of_acc_per_slice_small_conv)+0.2),list_of_acc_per_slice_small_conv,marker = 'o',label='Small Conv3D',color='tab:purple',linewidth=5)


plt.errorbar(np.arange(0,len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated, yerr=list_of_std_per_slice_big_conv_gated, fmt="none",color='tab:blue')
plt.errorbar(np.arange(0.05,len(list_of_acc_per_slice_conv2d_indepedent)+0.05),list_of_acc_per_slice_conv2d_indepedent, yerr=list_of_std_per_slice_conv2d_indepedent, fmt="none",color='tab:orange')
plt.errorbar(np.arange(0.1,len(list_of_acc_per_slice_lstm)+0.1),list_of_acc_per_slice_lstm, yerr=list_of_std_per_slice_lstm, fmt="none",color='tab:green')
plt.errorbar(np.arange(0.15,len(list_of_acc_per_slice_big_conv)+0.15),list_of_acc_per_slice_big_conv, yerr=list_of_std_per_slice_big_conv, fmt="none",color='tab:red')
plt.errorbar(np.arange(0.2,len(list_of_acc_per_slice_small_conv)+0.2),list_of_acc_per_slice_small_conv, yerr=list_of_std_per_slice_small_conv, fmt="none",color='tab:purple')



ticks,labels = plt.xticks()

#plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])
plt.xticks(ticks=ticks,labels=['',1,3,6,9,18,30,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.legend()

xmin, xmax, ymin, ymax = plt.axis()

ymin = 0
xmin = xmin+0.4
xmax = xmax-0.4

plt.hlines(y=0.34,xmin = xmin,xmax = xmax, colors='hotpink',linestyles='dashed')
plt.text(x=-0.55,y=0.35,s='Majority Guessing',fontsize=12)

plt.axis([xmin, xmax, ymin, ymax])

#plt.tight_layout()

plt.show()

plt.rcParams['figure.figsize'] = (23,17)

plt.rcParams.update({'font.size': 20})

list_of_acc_per_slice_big_conv_gated.reverse()
list_of_acc_per_slice_conv2d_indepedent.reverse()
list_of_acc_per_slice_lstm.reverse()
list_of_acc_per_slice_big_conv.reverse()
list_of_acc_per_slice_small_conv.reverse()

list_of_std_per_slice_big_conv_gated.reverse()
list_of_std_per_slice_conv2d_indepedent.reverse()
list_of_std_per_slice_lstm.reverse()
list_of_std_per_slice_big_conv.reverse()
list_of_std_per_slice_small_conv.reverse()

plt.plot(np.arange(0,len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated,marker = 'x',markersize=17,label='Big Conv3D Gated',color='tab:blue',linewidth=5)
plt.plot(np.arange(0.05,len(list_of_acc_per_slice_conv2d_indepedent)+0.05),list_of_acc_per_slice_conv2d_indepedent,marker = 'x',markersize=17,label='Conv2D',color='tab:orange',linewidth=5)
plt.plot(np.arange(0.1,len(list_of_acc_per_slice_lstm)+0.1),list_of_acc_per_slice_lstm,marker = 'x',markersize=17,label='LSTM',color='tab:green',linewidth=5)
plt.plot(np.arange(0.15,len(list_of_acc_per_slice_big_conv)+0.15),list_of_acc_per_slice_big_conv,marker = 'x',markersize=17,label = 'Big Conv3D',color='tab:red',linewidth=5)
plt.plot(np.arange(0.2,len(list_of_acc_per_slice_small_conv)+0.2),list_of_acc_per_slice_small_conv,marker = 'x',markersize=17,label='Small Conv3D',color='tab:purple',linewidth=5)


plt.errorbar(np.arange(0,len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated, yerr=list_of_std_per_slice_big_conv_gated, fmt="none",color='tab:blue')
plt.errorbar(np.arange(0.05,len(list_of_acc_per_slice_conv2d_indepedent)+0.05),list_of_acc_per_slice_conv2d_indepedent, yerr=list_of_std_per_slice_conv2d_indepedent, fmt="none",color='tab:orange')
plt.errorbar(np.arange(0.1,len(list_of_acc_per_slice_lstm)+0.1),list_of_acc_per_slice_lstm, yerr=list_of_std_per_slice_lstm, fmt="none",color='tab:green')
plt.errorbar(np.arange(0.15,len(list_of_acc_per_slice_big_conv)+0.15),list_of_acc_per_slice_big_conv, yerr=list_of_std_per_slice_big_conv, fmt="none",color='tab:red')
plt.errorbar(np.arange(0.2,len(list_of_acc_per_slice_small_conv)+0.2),list_of_acc_per_slice_small_conv, yerr=list_of_std_per_slice_small_conv, fmt="none",color='tab:purple')



ticks,labels = plt.xticks()

#plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])
plt.xticks(ticks=ticks,labels=['',1,3,6,9,18,30,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.legend()

xmin, xmax, ymin, ymax = plt.axis()

ymin = 0
xmin = xmin+0.4
xmax = xmax-0.4

plt.hlines(y=0.34,xmin = xmin,xmax = xmax, colors='hotpink',linestyles='dashed')
plt.text(x=-0.55,y=0.35,s='Majority Guessing',fontsize=12)

plt.axis([xmin, xmax, ymin, ymax])

#plt.tight_layout()

plt.show()

plt.rcParams['figure.figsize'] = (20,13)

plt.rcParams.update({'font.size': 20})

plt.plot(np.arange(0,len(list_of_acc_per_slice_big_conv_gated)),list_of_acc_per_slice_big_conv_gated,marker = 'o',label='Big Conv3D Gated',color='tab:blue',linewidth=5)
plt.plot(np.arange(0.05,len(list_of_acc_per_slice_conv2d_indepedent)+0.05),list_of_acc_per_slice_conv2d_indepedent,marker = 'o',label='Conv2D',color='tab:orange',linewidth=5)
plt.plot(np.arange(0.1,len(list_of_acc_per_slice_lstm)+0.1),list_of_acc_per_slice_lstm,marker = 'o',label='LSTM',color='tab:green',linewidth=5)
plt.plot(np.arange(0.15,len(list_of_acc_per_slice_big_conv)+0.15),list_of_acc_per_slice_big_conv,marker = 'o',label = 'Big Conv3D',color='tab:red',linewidth=5)
plt.plot(np.arange(0.2,len(list_of_acc_per_slice_small_conv)+0.2),list_of_acc_per_slice_small_conv,marker = 'o',label='Small Conv3D',color='tab:purple',linewidth=5)


ticks,labels = plt.xticks()

plt.xticks(ticks=ticks,labels=['',30,18,9,6,3,1,''])

plt.xlabel('Frames per Datasample')

plt.ylabel('Average Cat. Accuracy')

plt.legend()


plt.tight_layout()

plt.show()

"""#Runtime Visualization

#Runtime influenced by FPS - Conv2D Indepedent

##Calc

### Slice 45
"""

runtime_overall_conv2d_indepedent_slice_45 = [46.013012647628784,91.42107224464417]

print(runtime_overall_conv2d_indepedent_slice_45)

mean_overall_45 = np.mean(runtime_overall_conv2d_indepedent_slice_45)
std_overall_45 = np.std(runtime_overall_conv2d_indepedent_slice_45)

print(mean_overall_45)
print(std_overall_45)

runtime_pp_conv2d_indepedent_slice_45 = [1.439685344696045,1.2704510688781738]

print(runtime_pp_conv2d_indepedent_slice_45)

mean_pp_45 = np.mean(runtime_pp_conv2d_indepedent_slice_45)

print(mean_pp_45)

runtime_model_conv2d_indepedent_slice_45 = [42.94686317443848,88.39035725593567]

print(runtime_model_conv2d_indepedent_slice_45)

mean_model_45 = np.mean(runtime_model_conv2d_indepedent_slice_45)

print(mean_model_45)

"""###Slice 30"""

runtime_overall_conv2d_indepedent_slice_30 = [452.37400126457214]

print(runtime_overall_conv2d_indepedent_slice_30)

mean_overall_30 = np.mean(runtime_overall_conv2d_indepedent_slice_30)
std_overall_30 = np.std(runtime_overall_conv2d_indepedent_slice_30)

print(mean_overall_30)
print(std_overall_30)

runtime_pp_conv2d_indepedent_slice_30 = [141.18971061706543]

print(runtime_pp_conv2d_indepedent_slice_30)

mean_pp_30 = np.mean(runtime_pp_conv2d_indepedent_slice_30)

print(mean_pp_30)

runtime_model_conv2d_indepedent_slice_30 = [98.92932987213135]

print(runtime_model_conv2d_indepedent_slice_30)

mean_model_30 = np.mean(runtime_model_conv2d_indepedent_slice_30)

print(mean_model_30)

"""###Slice 15"""

runtime_overall_conv2d_indepedent_slice_15 = [424.68017196655273,859.3161795139313]

print(runtime_overall_conv2d_indepedent_slice_15)

mean_overall_15 = np.mean(runtime_overall_conv2d_indepedent_slice_15)
std_overall_15 = np.std(runtime_overall_conv2d_indepedent_slice_15)

print(mean_overall_15)
print(std_overall_15)

runtime_pp_conv2d_indepedent_slice_15 = [53.31587338447571,162.81525707244873]

print(runtime_pp_conv2d_indepedent_slice_15)

mean_pp_15 = np.mean(runtime_pp_conv2d_indepedent_slice_15)

print(mean_pp_15)

runtime_model_conv2d_indepedent_slice_15 = [138.08605289459229,147.0401930809021]

print(runtime_model_conv2d_indepedent_slice_15)

mean_model_15 = np.mean(runtime_model_conv2d_indepedent_slice_15)

print(mean_model_15)

"""###Slice 10"""

runtime_overall_conv2d_indepedent_slice_10 = [510.9191036224365,1056.034152507782]

print(runtime_overall_conv2d_indepedent_slice_10)

mean_overall_10 = np.mean(runtime_overall_conv2d_indepedent_slice_10)
std_overall_10 = np.std(runtime_overall_conv2d_indepedent_slice_10)

print(mean_overall_10)
print(std_overall_10)

runtime_pp_conv2d_indepedent_slice_10 = [61.45140838623047,239.36298489570618]

print(runtime_pp_conv2d_indepedent_slice_10)

mean_pp_10 = np.mean(runtime_pp_conv2d_indepedent_slice_10)

print(mean_pp_10)

runtime_model_conv2d_indepedent_slice_10 = [154.62334871292114,226.17923140525818]

print(runtime_model_conv2d_indepedent_slice_10)

mean_model_10 = np.mean(runtime_model_conv2d_indepedent_slice_10)

print(mean_model_10)

"""###Slice 5"""

runtime_overall_conv2d_indepedent_slice_5 = [363.92382621765137,745.3803136348724]

print(runtime_overall_conv2d_indepedent_slice_5)

mean_overall_5 = np.mean(runtime_overall_conv2d_indepedent_slice_5)
std_overall_5 = np.std(runtime_overall_conv2d_indepedent_slice_5)

print(mean_overall_5)
print(std_overall_5)

runtime_pp_conv2d_indepedent_slice_5 = [91.51595401763916,159.3753261566162]

print(runtime_pp_conv2d_indepedent_slice_5)

mean_pp_5 = np.mean(runtime_pp_conv2d_indepedent_slice_5)

print(mean_pp_5)

runtime_model_conv2d_indepedent_slice_5 = [146.97829866409302,264.3232352733612]

print(runtime_model_conv2d_indepedent_slice_5)

mean_model_5 = np.mean(runtime_model_conv2d_indepedent_slice_5)

print(mean_model_5)

"""###Slice 3"""

runtime_overall_conv2d_indepedent_slice_3 = [532.823725938797]

print(runtime_overall_conv2d_indepedent_slice_3)

mean_overall_3 = np.mean(runtime_overall_conv2d_indepedent_slice_3)
std_overall_3 = np.std(runtime_overall_conv2d_indepedent_slice_3)

print(mean_overall_3)
print(std_overall_3)

runtime_pp_conv2d_indepedent_slice_3 = [108.05038166046143]

print(runtime_pp_conv2d_indepedent_slice_3)

mean_pp_3 = np.mean(runtime_pp_conv2d_indepedent_slice_3)

print(mean_pp_3)

runtime_model_conv2d_indepedent_slice_3 = [311.5251741409302]

print(runtime_model_conv2d_indepedent_slice_3)

mean_model_3 = np.mean(runtime_model_conv2d_indepedent_slice_3)

print(mean_model_3)

"""### Combination of all values"""

runtime_overall_mean_conv2d_indepedent = [mean_overall_3,mean_overall_5,mean_overall_10,mean_overall_15,mean_overall_30,mean_overall_45]
runtime_overall_std_conv2d_indepedent = [std_overall_3,std_overall_5,std_overall_10,std_overall_15,std_overall_30,std_overall_45]
runtime_pp_mean_conv2d_indepedent = [mean_pp_3,mean_pp_5,mean_pp_10,mean_pp_15,mean_pp_30,mean_pp_45]
runtime_model_mean_conv2d_indepedent = [mean_model_3,mean_model_5,mean_model_10,mean_model_15,mean_model_30,mean_model_45]

print('Runtime Overall Mean:', runtime_overall_mean_conv2d_indepedent)
print('Runtime Overall Std:',runtime_overall_std_conv2d_indepedent)
print('Runtime PP Mean:',runtime_pp_mean_conv2d_indepedent)
print('Runtime Model Mean:',runtime_model_mean_conv2d_indepedent)

"""#Runtime influenced by FPS - LSTM

##Calc

### Slice 45
"""

runtime_overall_lstm_slice_45 = [197.1227834224701,194.64267110824585,191.28186225891113]

print(runtime_overall_lstm_slice_45)

mean_overall_45 = np.mean(runtime_overall_lstm_slice_45)
std_overall_45 = np.std(runtime_overall_lstm_slice_45)

print(mean_overall_45)
print(std_overall_45)

runtime_pp_lstm_slice_45 = [0.11955428123474121,0.16639256477355957,0.04686450958251953]

print(runtime_pp_lstm_slice_45)

mean_pp_45 = np.mean(runtime_pp_lstm_slice_45)

print(mean_pp_45)

runtime_model_lstm_slice_45 = [193.04646968841553,190.71533679962158,189.7579367160797]

print(runtime_model_lstm_slice_45)

mean_model_45 = np.mean(runtime_model_lstm_slice_45)

print(mean_model_45)

"""###Slice 30"""

runtime_overall_lstm_slice_30 = [278.6232991218567,276.6733000278473,277.16643714904785]

print(runtime_overall_lstm_slice_30)

mean_overall_30 = np.mean(runtime_overall_lstm_slice_30)
std_overall_30 = np.std(runtime_overall_lstm_slice_30)

print(mean_overall_30)
print(std_overall_30)

runtime_pp_lstm_slice_30 = [0.07074570655822754,0.07072186470031738,0.07081866264343262]

print(runtime_pp_lstm_slice_30)

mean_pp_30 = np.mean(runtime_pp_lstm_slice_30)

print(mean_pp_30)

runtime_model_lstm_slice_30 = [277.65641832351685,275.7273600101471,276.2233955860138]

print(runtime_model_lstm_slice_30)

mean_model_30 = np.mean(runtime_model_lstm_slice_30)

print(mean_model_30)

"""###Slice 15"""

runtime_overall_lstm_slice_15 = [537.0078916549683,534.4664220809937,536.2141761779785]

print(runtime_overall_lstm_slice_15)

mean_overall_15 = np.mean(runtime_overall_lstm_slice_15)
std_overall_15 = np.std(runtime_overall_lstm_slice_15)

print(mean_overall_15)
print(std_overall_15)

runtime_pp_lstm_slice_15 = [0.11269617080688477,0.1118621826171875,0.11243438720703125]

print(runtime_pp_lstm_slice_15)

mean_pp_15 = np.mean(runtime_pp_lstm_slice_15)

print(mean_pp_15)

runtime_model_lstm_slice_15 = [536.0025508403778,533.4606070518494,535.2196214199066]

print(runtime_model_lstm_slice_15)

mean_model_15 = np.mean(runtime_model_lstm_slice_15)

print(mean_model_15)

"""###Slice 10"""

runtime_overall_lstm_slice_10 = [794.3823866844177,793.0398676395416,794.6322059631348]

print(runtime_overall_lstm_slice_10)

mean_overall_10 = np.mean(runtime_overall_lstm_slice_10)
std_overall_10 = np.std(runtime_overall_lstm_slice_10)

print(mean_overall_10)
print(std_overall_10)

runtime_pp_lstm_slice_10 = [0.13183259963989258,0.13621735572814941,0.13459253311157227]

print(runtime_pp_lstm_slice_10)

mean_pp_10 = np.mean(runtime_pp_lstm_slice_10)

print(mean_pp_10)

runtime_model_lstm_slice_10 = [793.3686516284943,792.014212846756,793.6171686649323]

print(runtime_model_lstm_slice_10)

mean_model_10 = np.mean(runtime_model_lstm_slice_10)

print(mean_model_10)

"""###Slice 5"""

runtime_overall_lstm_slice_5 = [1595.506698846817]

print(runtime_overall_lstm_slice_5)

mean_overall_5 = np.mean(runtime_overall_lstm_slice_5)
std_overall_5 = np.std(runtime_overall_lstm_slice_5)

print(mean_overall_5)
print(std_overall_5)

runtime_pp_lstm_slice_5 = [0.2371060848236084]

print(runtime_pp_lstm_slice_5)

mean_pp_5 = np.mean(runtime_pp_lstm_slice_5)

print(mean_pp_5)

runtime_model_lstm_slice_5 = [1594.3701379299164]

print(runtime_model_lstm_slice_5)

mean_model_5 = np.mean(runtime_model_lstm_slice_5)

print(mean_model_5)

"""###Slice 3"""

runtime_overall_lstm_slice_3 = [5892.308525323868]

print(runtime_overall_lstm_slice_3)

mean_overall_3 = np.mean(runtime_overall_lstm_slice_3)
std_overall_3 = np.std(runtime_overall_lstm_slice_3)

print(mean_overall_3)
print(std_overall_3)

runtime_pp_lstm_slice_3 = [0.3775904178619385]

print(runtime_pp_lstm_slice_3)

mean_pp_3 = np.mean(runtime_pp_lstm_slice_3)

print(mean_pp_3)

runtime_model_lstm_slice_3 = [5889.855115175247]

print(runtime_model_lstm_slice_3)

mean_model_3 = np.mean(runtime_model_lstm_slice_3)

print(mean_model_3)

"""### Combination of all values"""

runtime_overall_mean_lstm = [mean_overall_3,mean_overall_5,mean_overall_10,mean_overall_15,mean_overall_30,mean_overall_45]
runtime_overall_std_lstm = [std_overall_3,std_overall_5,std_overall_10,std_overall_15,std_overall_30,std_overall_45]
runtime_pp_mean_lstm = [mean_pp_3,mean_pp_5,mean_pp_10,mean_pp_15,mean_pp_30,mean_pp_45]
runtime_model_mean_lstm = [mean_model_3,mean_model_5,mean_model_10,mean_model_15,mean_model_30,mean_model_45]

print('Runtime Overall Mean:', runtime_overall_mean_lstm)
print('Runtime Overall Std:',runtime_overall_std_lstm)
print('Runtime PP Mean:',runtime_pp_mean_lstm)
print('Runtime Model Mean:',runtime_model_mean_lstm)

"""#Runtime influenced by FPS - Small Conv 3D

##Calc

### Slice 45
"""

runtime_overall_small_conv3d_slice_45 = [55.771353006362915,54.587037801742554,54.28676247596741]

print(runtime_overall_small_conv3d_slice_45)

mean_overall_45 = np.mean(runtime_overall_small_conv3d_slice_45)
std_overall_45 = np.std(runtime_overall_small_conv3d_slice_45)

print(mean_overall_45)
print(std_overall_45)

runtime_pp_small_conv3d_slice_45 = [0.08101677894592285,0.06403994560241699,0.06545877456665039]

print(runtime_pp_small_conv3d_slice_45)

mean_pp_45 = np.mean(runtime_pp_small_conv3d_slice_45)

print(mean_pp_45)

runtime_model_small_conv3d_slice_45 = [54.26093244552612,53.71707081794739,53.411813497543335]

print(runtime_model_small_conv3d_slice_45)

mean_model_45 = np.mean(runtime_model_small_conv3d_slice_45)

print(mean_model_45)

"""###Slice 30"""

runtime_overall_small_conv3d_slice_30 = [147.1219162940979,28.752419471740723,26.983492136001587]

print(runtime_overall_small_conv3d_slice_30)

mean_overall_30 = np.mean(runtime_overall_small_conv3d_slice_30)
std_overall_30 = np.std(runtime_overall_small_conv3d_slice_30)

print(mean_overall_30)
print(std_overall_30)

runtime_pp_small_conv3d_slice_30 = [0.08411240577697754,0.6851887702941895,3.764313220977783]

print(runtime_pp_small_conv3d_slice_30)

mean_pp_30 = np.mean(runtime_pp_small_conv3d_slice_30)

print(mean_pp_30)

runtime_model_small_conv3d_slice_30 = [26.08687686920166,27.14323854446411,61.62247347831726]

print(runtime_model_small_conv3d_slice_30)

mean_model_30 = np.mean(runtime_model_small_conv3d_slice_30)

print(mean_model_30)

"""###Slice 15"""

runtime_overall_small_conv3d_slice_15 = [111.49202752113342,111.23681783676147,111.24836468696594]

print(runtime_overall_small_conv3d_slice_15)

mean_overall_15 = np.mean(runtime_overall_small_conv3d_slice_15)
std_overall_15 = np.std(runtime_overall_small_conv3d_slice_15)

print(mean_overall_15)
print(std_overall_15)

runtime_pp_small_conv3d_slice_15 = [0.1447007656097412,0.1414809226989746,0.12652325630187988]

print(runtime_pp_small_conv3d_slice_15)

mean_pp_15 = np.mean(runtime_pp_small_conv3d_slice_15)

print(mean_pp_15)

runtime_model_small_conv3d_slice_15 = [110.26324963569641,110.24335527420044,110.5221312046051]

print(runtime_model_small_conv3d_slice_15)

mean_model_15 = np.mean(runtime_model_small_conv3d_slice_15)

print(mean_model_15)

"""###Slice 10"""

runtime_overall_small_conv3d_slice_10 = [180.55659699440002,193.43587350845337,180.49404764175415]

print(runtime_overall_small_conv3d_slice_10)

mean_overall_10 = np.mean(runtime_overall_small_conv3d_slice_10)
std_overall_10 = np.std(runtime_overall_small_conv3d_slice_10)

print(mean_overall_10)
print(std_overall_10)

runtime_pp_small_conv3d_slice_10 = [0.685788631439209,0.2223813533782959,2.9258015155792236]

print(runtime_pp_small_conv3d_slice_10)

mean_pp_10 = np.mean(runtime_pp_small_conv3d_slice_10)

print(mean_pp_10)

runtime_model_small_conv3d_slice_10 = [176.68426060676575,176.29789233207703,178.32447218894958]

print(runtime_model_small_conv3d_slice_10)

mean_model_10 = np.mean(runtime_model_small_conv3d_slice_10)

print(mean_model_10)

"""###Slice 5"""

runtime_overall_small_conv3d_slice_5 = [465.0647940635681,466.6626789569855,472.0884702205658]

print(runtime_overall_small_conv3d_slice_5)

mean_overall_5 = np.mean(runtime_overall_small_conv3d_slice_5)
std_overall_5 = np.std(runtime_overall_small_conv3d_slice_5)

print(mean_overall_5)
print(std_overall_5)

runtime_pp_small_conv3d_slice_5 = [0.4473996162414551,1.4314842224121094,1.790360689163208]

print(runtime_pp_small_conv3d_slice_5)

mean_pp_5 = np.mean(runtime_pp_small_conv3d_slice_5)

print(mean_pp_5)

runtime_model_small_conv3d_slice_5 = [455.0546643733978,457.3469760417938,459.38851618766785]

print(runtime_model_small_conv3d_slice_5)

mean_model_5 = np.mean(runtime_model_small_conv3d_slice_5)

print(mean_model_5)

"""###Slice 3"""

runtime_overall_small_conv3d_slice_3 = [859.1886701583862,870.721292257309,884.9395978450775]

print(runtime_overall_small_conv3d_slice_3)

mean_overall_3 = np.mean(runtime_overall_small_conv3d_slice_3)
std_overall_3 = np.std(runtime_overall_small_conv3d_slice_3)

print(mean_overall_3)
print(std_overall_3)

runtime_pp_small_conv3d_slice_3 = [0.5954418182373047,0.5970547199249268,0.45041942596435547]

print(runtime_pp_small_conv3d_slice_3)

mean_pp_3 = np.mean(runtime_pp_small_conv3d_slice_3)

print(mean_pp_3)

runtime_model_small_conv3d_slice_3 = [857.3661677837372,868.1118395328522,876.4586446285248]

print(runtime_model_small_conv3d_slice_3)

mean_model_3 = np.mean(runtime_model_small_conv3d_slice_3)

print(mean_model_3)

"""### Combination of all values"""

runtime_overall_mean_small_conv3d = [mean_overall_3,mean_overall_5,mean_overall_10,mean_overall_15,mean_overall_30,mean_overall_45]
runtime_overall_std_small_conv3d = [std_overall_3,std_overall_5,std_overall_10,std_overall_15,std_overall_30,std_overall_45]
runtime_pp_mean_small_conv3d = [mean_pp_3,mean_pp_5,mean_pp_10,mean_pp_15,mean_pp_30,mean_pp_45]
runtime_model_mean_small_conv3d = [mean_model_3,mean_model_5,mean_model_10,mean_model_15,mean_model_30,mean_model_45]

print('Runtime Overall Mean:', runtime_overall_mean_small_conv3d)
print('Runtime Overall Std:',runtime_overall_std_small_conv3d)
print('Runtime PP Mean:',runtime_pp_mean_small_conv3d)
print('Runtime Model Mean:',runtime_model_mean_small_conv3d)

"""#Runtime influenced by FPS - Big Conv3D

##Calc

### Slice 45
"""

runtime_overall_big_conv3d_slice_45 = [86.2129385471344,86.2784149646759,85.88412880897522]

print(runtime_overall_big_conv3d_slice_45)

mean_overall_45 = np.mean(runtime_overall_big_conv3d_slice_45)
std_overall_45 = np.std(runtime_overall_big_conv3d_slice_45)

print(mean_overall_45)
print(std_overall_45)

runtime_pp_big_conv3d_slice_45 = [0.06449556350708008,0.06466841697692871,0.06548047065734863]

print(runtime_pp_big_conv3d_slice_45)

mean_pp_45 = np.mean(runtime_pp_big_conv3d_slice_45)

print(mean_pp_45)

runtime_model_big_conv3d_slice_45 = [84.98317170143127,85.36810946464539,85.29827499389648]

print(runtime_model_big_conv3d_slice_45)

mean_model_45 = np.mean(runtime_model_big_conv3d_slice_45)

print(mean_model_45)

"""###Slice 30"""

runtime_overall_big_conv3d_slice_30 = [126.92041373252869,126.64111924171448,129.18615579605103]

print(runtime_overall_big_conv3d_slice_30)

mean_overall_30 = np.mean(runtime_overall_big_conv3d_slice_30)
std_overall_30 = np.std(runtime_overall_big_conv3d_slice_30)

print(mean_overall_30)
print(std_overall_30)

runtime_pp_big_conv3d_slice_30 = [0.08896446228027344,0.08399701118469238,0.08318924903869629]

print(runtime_pp_big_conv3d_slice_30)

mean_pp_30 = np.mean(runtime_pp_big_conv3d_slice_30)

print(mean_pp_30)

runtime_model_big_conv3d_slice_30 = [128.26768517494202,125.72404146194458,125.98600006103516]

print(runtime_model_big_conv3d_slice_30)

mean_model_30 = np.mean(runtime_model_big_conv3d_slice_30)

print(mean_model_30)

"""###Slice 15"""

runtime_overall_big_conv3d_slice_15 = [251.37669968605042,252.50323128700256,254.1801278591156]

print(runtime_overall_big_conv3d_slice_15)

mean_overall_15 = np.mean(runtime_overall_big_conv3d_slice_15)
std_overall_15 = np.std(runtime_overall_big_conv3d_slice_15)

print(mean_overall_15)
print(std_overall_15)

runtime_pp_big_conv3d_slice_15 = [0.14741969108581543,0.13831543922424316,0.1252739429473877]

print(runtime_pp_big_conv3d_slice_15)

mean_pp_15 = np.mean(runtime_pp_big_conv3d_slice_15)

print(mean_pp_15)

runtime_model_big_conv3d_slice_15 = [253.17509603500366,251.52753353118896,250.41670989990234]

print(runtime_model_big_conv3d_slice_15)

mean_model_15 = np.mean(runtime_model_big_conv3d_slice_15)

print(mean_model_15)

"""###Slice 10"""

runtime_overall_big_conv3d_slice_10 = [284.31535601615906,379.3820252418518,314.2188560962677,284.7683961391449]

print(runtime_overall_big_conv3d_slice_10)

mean_overall_10 = np.mean(runtime_overall_big_conv3d_slice_10)
std_overall_10 = np.std(runtime_overall_big_conv3d_slice_10)

print(mean_overall_10)
print(std_overall_10)

runtime_pp_big_conv3d_slice_10 = [0.377514123916626,1.0093958377838135,0.19087457656860352,0.18951940536499023]

print(runtime_pp_big_conv3d_slice_10)

mean_pp_10 = np.mean(runtime_pp_big_conv3d_slice_10)

print(mean_pp_10)

runtime_model_big_conv3d_slice_10 = [282.58285427093506,377.64786171913147,284.0791223049164,282.9682648181915]

print(runtime_model_big_conv3d_slice_10)

mean_model_10 = np.mean(runtime_model_big_conv3d_slice_10)

print(mean_model_10)

"""###Slice 5"""

runtime_overall_big_conv3d_slice_5 = [955.6974766254425,930.9410359859467,872.4612765312195]

print(runtime_overall_big_conv3d_slice_5)

mean_overall_5 = np.mean(runtime_overall_big_conv3d_slice_5)
std_overall_5 = np.std(runtime_overall_big_conv3d_slice_5)

print(mean_overall_5)
print(std_overall_5)

runtime_pp_big_conv3d_slice_5 = [11.76093077659607,7.385217666625977,1.812227487564087]

print(runtime_pp_big_conv3d_slice_5)

mean_pp_5 = np.mean(runtime_pp_big_conv3d_slice_5)

print(mean_pp_5)

runtime_model_big_conv3d_slice_5 = [825.2178530693054,878.5936708450317,849.874039888382]

print(runtime_model_big_conv3d_slice_5)

mean_model_5 = np.mean(runtime_model_big_conv3d_slice_5)

print(mean_model_5)

"""###Slice 3"""

runtime_overall_big_conv3d_slice_3 = [1561.5626118183136,1512.9505665302277,1576.2754118442535]

print(runtime_overall_big_conv3d_slice_3)

mean_overall_3 = np.mean(runtime_overall_big_conv3d_slice_3)
std_overall_3 = np.std(runtime_overall_big_conv3d_slice_3)

print(mean_overall_3)
print(std_overall_3)

runtime_pp_big_conv3d_slice_3 = [2.857309579849243,0.6001062393188477,0.4270448684692383]

print(runtime_pp_big_conv3d_slice_3)

mean_pp_3 = np.mean(runtime_pp_big_conv3d_slice_3)

print(mean_pp_3)

runtime_model_big_conv3d_slice_3 = [1559.7332227230072,1494.1456396579742,1530.672529220581]

print(runtime_model_big_conv3d_slice_3)

mean_model_3 = np.mean(runtime_model_big_conv3d_slice_3)

print(mean_model_3)

"""### Combination of all values"""

runtime_overall_mean_big_conv3d = [mean_overall_3,mean_overall_5,mean_overall_10,mean_overall_15,mean_overall_30,mean_overall_45]
runtime_overall_std_big_conv3d = [std_overall_3,std_overall_5,std_overall_10,std_overall_15,std_overall_30,std_overall_45]
runtime_pp_mean_big_conv3d = [mean_pp_3,mean_pp_5,mean_pp_10,mean_pp_15,mean_pp_30,mean_pp_45]
runtime_model_mean_big_conv3d = [mean_model_3,mean_model_5,mean_model_10,mean_model_15,mean_model_30,mean_model_45]

print('Runtime Overall Mean:', runtime_overall_mean_big_conv3d)
print('Runtime Overall Std:',runtime_overall_std_big_conv3d)
print('Runtime PP Mean:',runtime_pp_mean_big_conv3d)
print('Runtime Model Mean:',runtime_model_mean_big_conv3d)

"""#Runtime influenced by FPS - Gated Conv3D

##Calc

### Slice 45
"""

runtime_overall_big_conv_gated_slice_45 = [84.25051808357239,84.26456761360168,83.95640921592712]

print(runtime_overall_big_conv_gated_slice_45)

mean_overall_45 = np.mean(runtime_overall_big_conv_gated_slice_45)
std_overall_45 = np.std(runtime_overall_big_conv_gated_slice_45)

print(mean_overall_45)
print(std_overall_45)

runtime_pp_big_conv_gated_slice_45 = [0.05868339538574219,0.06020331382751465,0.06535983085632324]

print(runtime_pp_big_conv_gated_slice_45)

mean_pp_45 = np.mean(runtime_pp_big_conv_gated_slice_45)

print(mean_pp_45)

runtime_model_big_conv_gated_slice_45 = [83.08120012283325,83.37852692604065,83.36073398590088]

print(runtime_model_big_conv_gated_slice_45)

mean_model_45 = np.mean(runtime_model_big_conv_gated_slice_45)

print(mean_model_45)

"""###Slice 30"""

runtime_overall_big_conv_gated_slice_30 = [129.18700242042542,126.39100933074951,126.6240074634552]

print(runtime_overall_big_conv_gated_slice_30)

mean_overall_30 = np.mean(runtime_overall_big_conv_gated_slice_30)
std_overall_30 = np.std(runtime_overall_big_conv_gated_slice_30)

print(mean_overall_30)
print(std_overall_30)

runtime_pp_big_conv_gated_slice_30 = [0.08626961708068848,0.08202624320983887,0.13112616539001465]

print(runtime_pp_big_conv_gated_slice_30)

mean_pp_30 = np.mean(runtime_pp_big_conv_gated_slice_30)

print(mean_pp_30)

runtime_model_big_conv_gated_slice_30 = [125.71549940109253,125.48913431167603,127.22439193725586]

print(runtime_model_big_conv_gated_slice_30)

mean_model_30 = np.mean(runtime_model_big_conv_gated_slice_30)

print(mean_model_30)

"""###Slice 15"""

runtime_overall_big_conv_gated_slice_15 = [257.3048746585846,257.4851748943329,256.38668036460876]

print(runtime_overall_big_conv_gated_slice_15)

mean_overall_15 = np.mean(runtime_overall_big_conv_gated_slice_15)
std_overall_15 = np.std(runtime_overall_big_conv_gated_slice_15)

print(mean_overall_15)
print(std_overall_15)

runtime_pp_big_conv_gated_slice_15 = [ 0.2713613510131836,0.13859176635742188,0.250624418258667]

print(runtime_pp_big_conv_gated_slice_15)

mean_pp_15 = np.mean(runtime_pp_big_conv_gated_slice_15)

print(mean_pp_15)

runtime_model_big_conv_gated_slice_15 = [255.02461695671082,256.4888210296631,256.1787676811218]

print(runtime_model_big_conv_gated_slice_15)

mean_model_15 = np.mean(runtime_model_big_conv_gated_slice_15)

print(mean_model_15)

"""###Slice 10"""

runtime_overall_big_conv_gated_slice_10 = [292.1853461265564,401.94700360298157,340.66982412338257,294.7298843860626]

print(runtime_overall_big_conv_gated_slice_10)

mean_overall_10 = np.mean(runtime_overall_big_conv_gated_slice_10)
std_overall_10 = np.std(runtime_overall_big_conv_gated_slice_10)

print(mean_overall_10)
print(std_overall_10)

runtime_pp_big_conv_gated_slice_10 = [0.2588975429534912,0.1483020782470703,3.75968337059021,1.0845091342926025]

print(runtime_pp_big_conv_gated_slice_10)

mean_pp_10 = np.mean(runtime_pp_big_conv_gated_slice_10)

print(mean_pp_10)

runtime_model_big_conv_gated_slice_10 = [287.2717673778534,287.51132011413574,400.3687102794647,289.2520399093628]

print(runtime_model_big_conv_gated_slice_10)

mean_model_10 = np.mean(runtime_model_big_conv_gated_slice_10)

print(mean_model_10)

"""###Slice 5"""

runtime_overall_big_conv_gated_slice_5 = [931.3519496917725,898.2265071868896,910.1131138801575]

print(runtime_overall_big_conv_gated_slice_5)

mean_overall_5 = np.mean(runtime_overall_big_conv_gated_slice_5)
std_overall_5 = np.std(runtime_overall_big_conv_gated_slice_5)

print(mean_overall_5)
print(std_overall_5)

runtime_pp_big_conv_gated_slice_5 = [12.432072639465332,7.41961932182312,2.6991043090820312]

print(runtime_pp_big_conv_gated_slice_5)

mean_pp_5 = np.mean(runtime_pp_big_conv_gated_slice_5)

print(mean_pp_5)

runtime_model_big_conv_gated_slice_5 = [861.9397268295288,856.145233631134,820.5567767620087]

print(runtime_model_big_conv_gated_slice_5)

mean_model_5 = np.mean(runtime_model_big_conv_gated_slice_5)

print(mean_model_5)

"""###Slice 3"""

runtime_overall_big_conv_gated_slice_3 = [1608.952648639679,1547.0216925144196,1605.8214721679688]

print(runtime_overall_big_conv_gated_slice_3)

mean_overall_3 = np.mean(runtime_overall_big_conv_gated_slice_3)
std_overall_3 = np.std(runtime_overall_big_conv_gated_slice_3)

print(mean_overall_3)
print(std_overall_3)

runtime_pp_big_conv_gated_slice_3 = [3.415642499923706,0.5856914520263672,0.4884185791015625]

print(runtime_pp_big_conv_gated_slice_3)

mean_pp_3 = np.mean(runtime_pp_big_conv_gated_slice_3)

print(mean_pp_3)

runtime_model_big_conv_gated_slice_3 = [1550.483256816864,1516.2951912879944,1606.8060715198517]

print(runtime_model_big_conv_gated_slice_3)

mean_model_3 = np.mean(runtime_model_big_conv_gated_slice_3)

print(mean_model_3)

"""### Combination of all values"""

runtime_overall_mean_big_conv_gated = [mean_overall_3,mean_overall_5,mean_overall_10,mean_overall_15,mean_overall_30,mean_overall_45]
runtime_overall_std_big_conv_gated = [std_overall_3,std_overall_5,std_overall_10,std_overall_15,std_overall_30,std_overall_45]
runtime_pp_mean_big_conv_gated = [mean_pp_3,mean_pp_5,mean_pp_10,mean_pp_15,mean_pp_30,mean_pp_45]
runtime_model_mean_big_conv_gated = [mean_model_3,mean_model_5,mean_model_10,mean_model_15,mean_model_30,mean_model_45]

print('Runtime Overall Mean:', runtime_overall_mean_big_conv_gated)
print('Runtime Overall Std:',runtime_overall_std_big_conv_gated)
print('Runtime PP Mean:',runtime_pp_mean_big_conv_gated)
print('Runtime Model Mean:',runtime_model_mean_big_conv_gated)

"""# Combined Visualized Runtimes per Frame Count

##Calc
"""

model_names = ['Big Conv3D Gated','Conv 2D','LSTM','Big Conv3D','Small Conv3D']
runtime_overall_mean = [runtime_overall_mean_big_conv_gated,runtime_overall_mean_conv2d_indepedent,runtime_overall_mean_lstm,runtime_overall_mean_big_conv3d,runtime_overall_mean_small_conv3d]
runtime_overall_std = [runtime_overall_std_big_conv_gated,runtime_overall_std_conv2d_indepedent,runtime_overall_std_lstm,runtime_overall_std_big_conv3d,runtime_overall_std_small_conv3d]
runtime_pp_mean = [runtime_pp_mean_big_conv_gated,runtime_pp_mean_conv2d_indepedent,runtime_pp_mean_lstm,runtime_pp_mean_big_conv3d,runtime_pp_mean_small_conv3d]
runtime_model_mean = [runtime_model_mean_big_conv_gated,runtime_model_mean_conv2d_indepedent,runtime_model_mean_lstm,runtime_model_mean_big_conv3d,runtime_model_mean_small_conv3d]

"""##Vis - Runtime - Overall"""

plt.rcParams['figure.figsize'] = (22,13)

plt.rcParams.update({'font.size': 20})

#plt.set_title('Runtime depending on Frame Amount')

axes1 = plt.subplot(3,3,1)
axes2 = plt.subplot(3,3,2)
axes3 = plt.subplot(3,3,3)
axes4 = plt.subplot(3,3,4)
axes5 = plt.subplot(3,3,5)
axes6 = plt.subplot(3,3,6)

axes1.set_title('30 Frames')
axes2.set_title('18 Frames')
axes3.set_title('9 Frames')
axes4.set_title('6 Frames')
axes5.set_title('3 Frames')
axes6.set_title('1 Frames')


for model_num in range(len(model_names)):
  cur_model_name = model_names[model_num]

  for cur_frame_num in range(len(runtime_overall_mean[model_num])):
      cur_axe_num = cur_frame_num + 1
      exec('axes' + str(cur_axe_num)+'.bar('+ 'x=' + str(model_num) +', height=' + str(runtime_overall_mean[model_num][cur_frame_num]) + ',label = ' + "'" +str(cur_model_name) +"'" +')')
      exec('axes' + str(cur_axe_num)+".set_ylabel('Time in sec')")
      #exec('axes' + str(cur_axe_num)+".set_xtickslabels('')")


#plt.figlegend(labels=model_names,loc = 'lower center', ncol=5, labelspacing=0. )
plt.figlegend(labels=model_names,loc = (0.15,0.15), ncol=5, labelspacing=0., fontsize=20 )

plt.tight_layout()

plt.show()

"""##Vis - Runtime - Overall with pp as part"""

plt.rcParams['figure.figsize'] = (22,13)

plt.rcParams.update({'font.size': 20})

#plt.set_title('Runtime depending on Frame Amount')

axes1 = plt.subplot(3,3,1)
axes2 = plt.subplot(3,3,2)
axes3 = plt.subplot(3,3,3)
axes4 = plt.subplot(3,3,4)
axes5 = plt.subplot(3,3,5)
axes6 = plt.subplot(3,3,6)

axes1.set_title('30 Frames')
axes2.set_title('18 Frames')
axes3.set_title('9 Frames')
axes4.set_title('6 Frames')
axes5.set_title('3 Frames')
axes6.set_title('1 Frames')


for model_num in range(len(model_names)):
  cur_model_name = model_names[model_num]

  for cur_frame_num in range(len(runtime_overall_mean[model_num])):
      cur_axe_num = cur_frame_num + 1
      #exec('axes' + str(cur_axe_num)+'.bar('+ 'x=' + str(model_num) +', height=' + str(runtime_overall_mean[model_num][cur_frame_num]-runtime_pp_mean[model_num][cur_frame_num]) + ',label = ' + "'" +str(cur_model_name) +"'" +')')
      exec('axes' + str(cur_axe_num)+'.bar('+ 'x=' + str(model_num) +', height=' + str(runtime_overall_mean[model_num][cur_frame_num]) + ',label = ' + "'" +str(cur_model_name) +"'" +')')
      exec('axes' + str(cur_axe_num)+".set_ylabel('Time in sec')")

for model_num in range(len(model_names)):
  cur_model_name = model_names[model_num]

  for cur_frame_num in range(len(runtime_overall_mean[model_num])):
      cur_axe_num = cur_frame_num + 1
      exec('axes' + str(cur_axe_num)+'.bar('+ 'x=' + str(model_num) +', height=' + str(runtime_pp_mean[model_num][cur_frame_num]) + ',label = ' + "'" +str(cur_model_name) +"'" +',color="saddlebrown"' +')')
      exec('axes' + str(cur_axe_num)+".set_ylabel('Time in sec')")


model_names_pp = model_names[:]
model_names_pp.append("Preprocessing") 

#plt.figlegend(labels=model_names,loc = 'lower center', ncol=5, labelspacing=0. )
plt.figlegend(labels=model_names_pp,loc = (0.15,0.15), ncol=6, labelspacing=0., fontsize=20 )

plt.tight_layout()

plt.show()

"""##Vis - Runtime - Model only"""

plt.rcParams['figure.figsize'] = (22,13)

plt.rcParams.update({'font.size': 20})

#plt.set_title('Runtime depending on Frame Amount')

axes1 = plt.subplot(3,3,1)
axes2 = plt.subplot(3,3,2)
axes3 = plt.subplot(3,3,3)
axes4 = plt.subplot(3,3,4)
axes5 = plt.subplot(3,3,5)
axes6 = plt.subplot(3,3,6)

axes1.set_title('30 Frames')
axes2.set_title('18 Frames')
axes3.set_title('9 Frames')
axes4.set_title('6 Frames')
axes5.set_title('3 Frames')
axes6.set_title('1 Frames')


for model_num in range(len(model_names)):
  cur_model_name = model_names[model_num]

  for cur_frame_num in range(len(runtime_model_mean[model_num])):
      cur_axe_num = cur_frame_num + 1
      exec('axes' + str(cur_axe_num)+'.bar('+ 'x=' + str(model_num) +', height=' + str(runtime_model_mean[model_num][cur_frame_num]) + ',label = ' + "'" +str(cur_model_name) +"'" +')')
      exec('axes' + str(cur_axe_num)+".set_ylabel('Time in sec')")
      


#plt.figlegend(labels=model_names,loc = 'lower center', ncol=5, labelspacing=0. )
plt.figlegend(labels=model_names,loc = (0.15,0.15), ncol=5, labelspacing=0., fontsize=20 )

plt.tight_layout()

plt.show()

"""Experimenting with Visualizier"""

rv = ReviewVisualizer([r"/home/max/Dokumente/swp bees 2022/review_finalcnn3d.log"])

rv.dfs[0][122:143]["cat_accuracy"]